{"trial_id": "00", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "dense-bot", "default": null, "conditions": [], "min_value": 50, "max_value": 350, "step": 50, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 2, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_0", "default": null, "conditions": [], "min_value": 50, "max_value": 100, "step": 25, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_0", "default": 0.0, "conditions": [], "values": [0.0, 0.1, 0.2, 0.3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "Optimizer", "default": "Adam", "conditions": [], "values": ["Adam", "SGD"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.1, "conditions": [], "values": [0.1, 0.01, 0.001], "ordered": true}}], "values": {"dense-bot": 250, "num_dense_layers": 1, "dense_0": 75, "dropout_0": 0.1, "Optimizer": "SGD", "learning_rate": 0.01}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/project/.local/lib/python3.6/site-packages/keras_tuner/engine/base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/keras_tuner/engine/base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/keras_tuner/engine/tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/keras_tuner/engine/tuner.py\", line 214, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/keras_tuner/engine/hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/keras/engine/training.py\", line 1184, in fit\n    tmp_logs = self.train_function(iterator)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py\", line 885, in __call__\n    result = self._call(*args, **kwds)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py\", line 933, in _call\n    self._initialize(args, kwds, add_initializers_to=initializers)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py\", line 760, in _initialize\n    *args, **kwds))\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/function.py\", line 3066, in _get_concrete_function_internal_garbage_collected\n    graph_function, _ = self._maybe_define_function(args, kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/function.py\", line 3463, in _maybe_define_function\n    graph_function = self._create_graph_function(args, kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/function.py\", line 3308, in _create_graph_function\n    capture_by_value=self._capture_by_value),\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/framework/func_graph.py\", line 1007, in func_graph_from_py_func\n    func_outputs = python_func(*func_args, **func_kwargs)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py\", line 668, in wrapped_fn\n    out = weak_wrapped_fn().__wrapped__(*args, **kwds)\n  File \"/project/.local/lib/python3.6/site-packages/tensorflow/python/framework/func_graph.py\", line 994, in wrapper\n    raise e.ag_error_metadata.to_exception(e)\nValueError: in user code:\n\n    /project/.local/lib/python3.6/site-packages/keras/engine/training.py:853 train_function  *\n        return step_function(self, iterator)\n    /project/.local/lib/python3.6/site-packages/keras/engine/training.py:842 step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/distribute/distribute_lib.py:1286 run\n        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/distribute/distribute_lib.py:2849 call_for_each_replica\n        return self._call_for_each_replica(fn, args, kwargs)\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/distribute/distribute_lib.py:3632 _call_for_each_replica\n        return fn(*args, **kwargs)\n    /project/.local/lib/python3.6/site-packages/keras/engine/training.py:835 run_step  **\n        outputs = model.train_step(data)\n    /project/.local/lib/python3.6/site-packages/keras/engine/training.py:789 train_step\n        y, y_pred, sample_weight, regularization_losses=self.losses)\n    /project/.local/lib/python3.6/site-packages/keras/engine/compile_utils.py:201 __call__\n        loss_value = loss_obj(y_t, y_p, sample_weight=sw)\n    /project/.local/lib/python3.6/site-packages/keras/losses.py:141 __call__\n        losses = call_fn(y_true, y_pred)\n    /project/.local/lib/python3.6/site-packages/keras/losses.py:245 call  **\n        return ag_fn(y_true, y_pred, **self._fn_kwargs)\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/util/dispatch.py:206 wrapper\n        return target(*args, **kwargs)\n    /project/.local/lib/python3.6/site-packages/keras/losses.py:1666 categorical_crossentropy\n        y_true, y_pred, from_logits=from_logits, axis=axis)\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/util/dispatch.py:206 wrapper\n        return target(*args, **kwargs)\n    /project/.local/lib/python3.6/site-packages/keras/backend.py:4839 categorical_crossentropy\n        target.shape.assert_is_compatible_with(output.shape)\n    /project/.local/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py:1161 assert_is_compatible_with\n        raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\n\n    ValueError: Shapes (None, 1) and (None, 10) are incompatible\n\n"}